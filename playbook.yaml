---
#vars:
#  playbook_tittle: "PLAYBOOK"

- name: "Test the connection to the host {{ hosts_selected }}"
  hosts: '{{ hosts_selected }}'
  tasks:
    - name: Ping hosts
      ping:
      tags: ping

      
- name: "{{ playbook_tittle }} / Check if the user {{ name_selected }} exist, update OS and install Docker"
  ignore_errors: yes
  hosts: '{{ hosts_selected }}'
  become: yes
  vars:
    user_name: '{{name_selected}}'
    user_state: '{{state_selected}}'
    user_pass: '{{pass_selected}}'
  tasks:
    - name: "{{ playbook_tittle }} / Check if the user {{ name_selected }} exist" 
      shell: "grep '{{user_name}}' /etc/passwd"
      register: user_info
      tags: user

    - name: "{{ playbook_tittle }} / Print information about the user {{ name_selected }}"
      debug:      
        var: user_info 
      when: user_info.rc == 0
      tags: user

    - name: "{{ playbook_tittle }} / Call the role 'create_user' to create {{ name_selected }} user"
      include_role:
        name: create_user
      when: (user_info.rc == 1) or (user_state=="absent")
      tags: user

    - name: "{{ playbook_tittle }} / Call the role 'update_OS' to update {{ hosts_selected }}"
      include_role:
        name: update_os
      when: install == 'yes'
      tags:
        - update
        - install
      
    - name: "{{ playbook_tittle }} / Call the role 'install_docker' to install docker on {{ hosts_selected }}"
      include_role:
        name: install_docker
      #when: install == 'yes'
      tags: 
        - install
        - delete
        - docker
